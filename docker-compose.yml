version: '2'
 
services:


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - backend
    ports:
      - 9200:9200

  web:
    build: ./web
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./web:/code
    depends_on:
      - postgres
      - elasticsearch
      - rabbit
      - celery
      - redis
    networks:
      - frontend
      - backend
    ports:
      - "8001:8000"

  celery:
    build: ./web
    command: celery -A src --loglevel=info --concurrency=4
    volumes:
      - ./web:/code
    depends_on:
      - postgres
      - rabbit
    networks:
      - backend

  rabbit:
    image: "rabbitmq:3-management"
    command:  bash -c "sleep 10; rabbitmq-server;"
    environment:
      - RABBITMQ_ERLANG_COOKIE='secret_cookie'
    tty: true
    volumes:
      - rabbit:/var/lib/rabbitmq
      - ./conf/:/etc/rabbitmq/
    networks:
      - backend
    ports:
      - "15672:15672"
      - "5672:5672"

  nginx:
    build: ./nginx
    restart: always
    volumes:
      - /www/static
    volumes_from:
      - web
    depends_on:
      - web
    networks:
      - frontend
    ports:
      - "80:80"
 
  redis:
    image: "redis:alpine"
    networks:
      - backend

  data:
    image: postgres:9.6
    volumes:
      - /var/lib/postgresql
    command: "true"
 
  postgres:
    restart: always
    build: ./postgresql
    volumes_from:
      - data
    networks:
      - backend
    expose:
      - "5432"
    ports:
      - "5432:5432"

networks:
  frontend:
  backend:

volumes:
  esdata:
    driver: local
  esdata2:
    driver: local
  rabbit:
    driver: local
  rabbit2:
    driver: local